/**
 * AUTO MADE BY GENARATE MAIN SCRIPT
 * DO NOT EDIT! USE GENARATE MAIN SCRIPT TO UPDATE.
 * THIS CODE HAS BEEN COMPRESSED TO KEEP THINGS FAST.
 **/
module.exports = ["/**\r"," * Genarated By: Gvbvdxx-Pack\r"," * do not copy or use this code for other programs, its only for this program,\r"," * do not edit or modify unless you know what your doing!\r"," **/","\r","\r","(function () {\r","    var dirname = \"\";\r"," var __GP_elements = {};\r"," var __GP_global_vars = {};\r","    var __gvbvdxx_pack_log = {\r","        log: function (a, b) {\r","            console.log(\"%c[\" + a + \"]:\" + b, \"color:black;font-weight:bold;\");\r","        },\r","        warn: function (a, b) {\r","            console.warn(\"%c[\" + a + \"]:\" + b, \"color:#ffa94d;font-weight:bold;background:#d9480f;\");\r","        },\r","        error: function (a, b) {\r","            console.error(\"%c[\" + a + \"]:\" + b, \"color:#ff8787;font-weight:bold;background:#c92a2a;\");\r","        }\r","    };\r","    var gp_require = (a,filename) => {\r","  if (!filename) {\r","   throw new Error(\"Do NOT use gp_require, instead use require.\");\r","  }\r","  if (!a) {\r","   throw new Error(\"Module must have a path to the file.\");\r","  }\r","        if (a == \"log\") {\r","   //should display the modules filename now.\r","            return {\r","                log: function (b) {\r","     \r","                    console.log(\"%c[\" + filename + \"]:\" + b, \"color:black;font-weight:bold;\");\r","                },\r","                warn: function (b) {\r","                    console.warn(\"%c[\" + filename + \"]:\" + b, \"color:#e67700;font-weight:bold;background:yellow;\");\r","                },\r","                error: function (b) {\r","                    console.error(\"%c[\" + filename + \"]:\" + b, \"color:#f03e3e;font-weight:bold;background:#c92a2a;\");\r","                }\r","            };\r","        }\r","  if (a == \"globalvars\") { //global variables across the current gvbvdxx pack program, but not available for the full window. (for better security)\r","   return {\r","    setVar:function (name,val) {\r","     __GP_global_vars[name] = val;\r","     return val;\r","    },\r","    getVar:function () {\r","     return __GP_global_vars[name];\r","    }\r","   };\r","  }\r","  if (a == \"elements\") {//Quick alternative for document access.\r","   return {\r","    appendElements: function (elm,appendArray) {\r","     for (var appendElm of appendArray) {\r","      elm.append(appendElm);\r","     }\r","    },\r","    createElementsFromJSON: function (jsonelmArray) { //converts an array of json's with element properties to a element list.\r","     function runElements(arry) {\r","      var myRealElms = [];\r","      for (var elm of arry) {\r","       var realElm = document.createElement(elm.element);\r","       for (var attriName of Object.keys(elm)) {\r","        if (!(\r","        (attriName == \"element\") ||\r","        (attriName == \"children\")\r","        )){\r","         var attributeValue = elm[attriName];\r","         var setattri = true;\r","         if (attriName == \"gid\") {\r","          __GP_elements[attributeValue] = realElm;\r","          setattri = false;\r","         }\r","         if (attriName == \"style\") {\r","          for (var styleName of Object.keys(attributeValue)) {\r","           var styleValue = attributeValue[styleName];\r","           realElm.style[styleName] = styleValue;\r","          }\r","          setattri = false;\r","         }\r","         if (attriName == \"innerHTML\") {\r","          realElm.innerHTML = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"textContent\") {\r","          realElm.textContent = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"src\") {\r","          realElm.src = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"value\") {\r","          realElm.value = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"min\") {\r","          realElm.min = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"max\") {\r","          realElm.max = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"width\") {\r","          realElm.width = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"height\") {\r","          realElm.height = attributeValue;\r","          setattri = false;\r","         }\r","         if (attriName == \"className\") {\r","          realElm.className = attributeValue;\r","          setattri = false;\r","         }\r","         if (setattri) {\r","          realElm.setAttribute(attriName,attributeValue);\r","         }\r","        }\r","       }\r","       \r","       \r","       if (elm.children) {\r","        var elmsToAppend = runElements(elm.children);\r","        for (var elmAppend of elmsToAppend) {\r","         realElm.append(elmAppend);\r","        }\r","       }\r","       myRealElms.push(realElm);\r","      }\r","      return myRealElms;\r","     }\r","     return runElements(jsonelmArray);\r","    },\r","    getById: function (id) {\r","     return document.getElementById(id);\r","    },\r","    setGPId: function (el,id) {\r","     __GP_elements[id] = el;\r","     return el;\r","    },\r","    getGPId: function (id) {\r","     if (__GP_elements[id]) {\r","      return __GP_elements[id];\r","     }\r","     return null;\r","    },\r","    body:document.body\r","   };\r","  }\r","        if (a == \"html\") {\r","            return class HTMLEmmitter {\r","                constructor() {\r","     /*support for writing html*/\r","     this.writeHTML = (contents, object) => {\r","      var subject = null;\r","      if (object) {\r","       subject = object;\r","      } else {\r","       subject = document.body;\r","      }\r","      subject.innerHTML += contents;\r","      return subject;\r","     };\r","     /*support for setting html*/\r","     this.setHTML = (contents, object) => {\r","      var subject = null;\r","      if (object) {\r","       subject = object;\r","      } else {\r","       subject = document.body;\r","      }\r","      subject.innerHTML = contents;\r","      return subject;\r","     };\r","    }\r","\r","            };\r","        }\r","        if (a == \"file-loader\") {\r","            return {\r","                read: function (a) {\r","                    for (var i in var__gvbvdxx_pack_filedata) {\r","                        if (var__gvbvdxx_pack_filedata[i].realdirNoReplacer.replaceAll(\"\\\\\", \"/\") == a) {\r","                            return var__gvbvdxx_pack_filedata[i].uncompileddata;\r","                        }\r","                    }\r","                    return null;\r","                }\r","            };\r","        }\r","        for (var i in var__gvbvdxx_pack_filedata) {\r","            if (var__gvbvdxx_pack_filedata[i].realdirNoReplacer.replaceAll(\"\\\\\", \"/\") == a) {\r","    try{\r","     var module = eval(var__gvbvdxx_pack_filedata[i].data);\r","     if (module && module.filename) {\r","      return module.exports;\r","     } else {\r","      __gvbvdxx_pack_log.warn(\"Gvbvdxx Pack\", \"The current module \\\"+\"+a+\"+\\\" is using a old exporting method, please upgrade it to \\\"module.exports\\\" and not \\\"return\\\", the module value cannot be overwitten, this module will return null.\");\r","      return null;\r","     }\r","    } catch(e) {\r","     __gvbvdxx_pack_log.error(\"Gvbvdxx Pack\", \"Failed To Extucute \"+var__gvbvdxx_pack_filedata[i].realdirNoReplacer+\". \"+e);\r","     throw Error(e);\r","     return;\r","    }\r","            }\r","        }\r","        throw Error(\"Unable To Find Module \" + a)\r","    };\r","    var dirs = () => {\r","        var dirsgen = [];\r","        for (var i in var__gvbvdxx_pack_filedata) {\r","            dirsgen.push(var__gvbvdxx_pack_filedata[i].name.replaceAll(\"\\\\\", \"/\"));\r","        }\r","        return dirsgen;\r","    };\r","    var var__gvbvdxx_pack_filedata = {};\r","    var__gvbvdxx_pack_filedata = GPDATA.fileTemplate;\r","    //__gvbvdxx_pack_log.log(\"Gvbvdxx Pack\", \"Loaded Files\");\r"," try{\r","  gp_require(\"src/index.js\",\"src/index.js\");\r"," }catch(e){\r","  __gvbvdxx_pack_log.error(\"Gvbvdxx Pack\", \"Faild to start the program, check and make sure index.js is programmed correctly.\");\r"," }\r"," delete GPDATA;\r","})();\r",""];